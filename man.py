mg_pawn_map = [
       0,   0,   0,   0,   0,   0,   0,   0,
       3,   3,  10,  19,  16,  19,   7,  -5,
      -9, -15,  11,  15,  32,  22,   5, -22,
      -4, -23,   6,  20,  40,  17,   4,  -8,
      13,   0, -13,   1,  11,  -2, -13,   5,
       5, -12,  -7,  22,  -8,  -5, -15,  -8,
      -7,   7,  -3, -13,   5, -16,  10,  -8,
       0,   0,   0,   0,   0,   0,   0,   0,
]

eg_pawn_map = [
       0,   0,   0,   0,   0,   0,   0,   0,
     -10,  -6,  10,   0,  14,   7,  -5, -19,
     -10, -10, -10,   4,   4,   3,  -6,  -4,
       6,  -2,  -8,  -4, -13, -12, -10,  -9,
      10,   5,   4,  -5,  -5,  -5,  14,   9,
      28,  20,  21,  28,  30,   7,   6,  13,
       0, -11,  12,  21,  25,  19,   4,   7,
       0,   0,   0,   0,   0,   0,   0,   0,
]

mg_knight_map = [
    -175, -92, -74, -73, -73, -74, -92,-175,
     -77, -41, -27, -15, -15, -27, -41, -77,
     -61, -17,   6,  12,  12,   6, -17, -61,
     -35,   8,  40,  49,  49,  40,   8, -35,
     -34,  13,  44,  51,  51,  44,  13, -34,
      -9,  22,  58,  53,  53,  58,  22,  -9,
     -67, -27,   4,  37,  37,   4, -27, -67,
    -201, -83, -56, -26, -26, -56, -83,-201,
]

eg_knight_map = [
     -53,  -5,  -8, -23, -23,  -8,  -5, -53,
     -15,   8,  19,   4,   4,  19,   8, -15,
      -7,  21,  -5,  17,  17,  -5,  21,  -7,
      -5,  11,  25,  39,  39,  25,  11,  -5,
     -12,  29,  22,  31,  31,  22,  29, -12,
     -16,   6,   1,  11,  11,   1,   6, -16,
     -17, -14,   5,   0,   0,   5, -14, -17,
     -48,   1, -14, -23, -23, -14,   1, -48,
]

mg_bishop_map = [
     -31, -20, -14,  -5,  -5, -14, -20, -31,
     -21, -13,  -8,   6,   6,  -8, -13, -21,
     -25, -11,  -1,   3,   3,  -1, -11, -25,
     -13,  -5,  -4,  -6,  -6,  -4,  -5, -13,
     -27, -15,  -4,   3,   3,  -4, -15, -27,
     -22,  -2,   6,  12,  12,   6,  -2, -22,
      -2,  12,  16,  18,  18,  16,  12,  -2,
     -17, -19,  -1,   9,   9,  -1, -19, -17,
]

eg_bishop_map = [
       3,  -5,  -5,   4,   4,  -5,  -5,   3,
      -3,   5,   8,  12,  12,   8,   5,  -3,
      -3,   6,  13,   7,   7,  13,   6,  -3,
       4,   5,   9,   8,   8,   9,   5,   4,
       0,  14,  12,   5,   5,  12,  14,   0,
      -4,  10,   6,   8,   8,   6,  10,  -4,
      -5,   6,  10,   8,   8,  10,   6,  -5,
      -2,  -2,   1,  -2,  -2,   1,  -2,  -2,
]

mg_rook_map = [
     271, 327, 271, 198, 198, 271, 327, 271,
     278, 303, 234, 179, 179, 234, 303, 278,
     195, 258, 169, 120, 120, 169, 258, 195,
     164, 190, 138,  98,  98, 138, 190, 164,
     154, 179, 105,  70,  70, 105, 179, 154,
     123, 145,  81,  31,  31,  81, 145, 123,
      88, 120,  65,  33,  33,  65, 120,  88,
      59,  89,  45,  -1,  -1,  45,  89,  59,
]

eg_rook_map = [
     -96, -65, -49, -21, -21, -49, -65, -96,
     -67, -54, -18,   8,   8, -18, -54, -67,
     -40, -27,  -8,  29,  29,  -8, -27, -40,
     -35,  -2,  13,  28,  28,  13,  -2, -35,
     -45, -16,   9,  39,  39,   9, -16, -45,
     -51, -44, -16,  17,  17, -16, -44, -51,
     -69, -50, -51,  12,  12, -51, -50, -69,
    -100, -88, -56, -17, -17, -56, -88,-100,
]

mg_queen_map = [
     -57, -30, -37, -12, -12, -37, -30, -57,
     -37, -13, -17,   1,   1, -17, -13, -37,
     -16,  -1,  -2,  10,  10,  -2,  -1, -16,
     -20,  -6,   0,  17,  17,   0,  -6, -20,
     -17,  -1, -14,  15,  15, -14,  -1, -17,
     -30,   6,   4,   6,   6,   4,   6, -30,
     -31, -20,  -1,   1,   1,  -1, -20, -31,
     -46, -42, -37, -24, -24, -37, -42, -46,
]

eg_queen_map = [
      -9, -13, -10,  -9,  -9, -10, -13,  -9,
     -12,  -9,  -1,  -2,  -2,  -1,  -9, -12,
       6,  -8,  -2,  -6,  -6,  -2,  -8,   6,
      -6,   1,  -9,   7,   7,  -9,   1,  -6,
      -5,   8,   7,  -6,  -6,   7,   8,  -5,
       6,   1,  -7,  10,  10,  -7,   1,   6,
       4,   5,  20,  -5,  -5,  20,   5,   4,
      18,   0,  19,  13,  13,  19,   0,  18,
]

mg_king_map = [
     -69, -57, -47, -26, -26, -47, -57, -69,
     -55, -31, -22,  -4,  -4, -22, -31, -55,
     -39, -18,  -9,   3,   3,  -9, -18, -39,
     -23,  -3,  13,  24,  24,  13,  -3, -23,
     -29,  -6,   9,  21,  21,   9,  -6, -29,
     -38, -18, -12,   1,   1, -12, -18, -38,
     -50, -27, -24,  -8,  -8, -24, -27, -50,
     -75, -52, -43, -36, -36, -43, -52, -75,
]

eg_king_map = [
       1,  45,  85,  76,  76,  85,  45,   1,
      53, 100, 133, 135, 135, 133, 100,  53,
      88, 130, 169, 175, 175, 169, 130,  88,
     103, 156, 172, 172, 172, 172, 156, 103,
      96, 166, 199, 199, 199, 199, 166,  96,
      92, 172, 184, 191, 191, 184, 172,  92,
      47, 121, 116, 131, 131, 116, 121,  47,
      11,  59,  73,  78,  78,  73,  59,  11,
]

for i in range(len(mg_pawn_map)):
    mg_pawn_map[i] = round(mg_pawn_map[i] * 100 / 206)
for i in range(len(eg_pawn_map)):
    eg_pawn_map[i] = round(eg_pawn_map[i] * 100 / 206)
for i in range(len(mg_knight_map)):
    mg_knight_map[i] = round(mg_knight_map[i] * 100 / 206)
for i in range(len(eg_knight_map)):
    eg_knight_map[i] = round(eg_knight_map[i] * 100 / 206)
for i in range(len(mg_bishop_map)):
    mg_bishop_map[i] = round(mg_bishop_map[i] * 100 / 206)
for i in range(len(eg_bishop_map)):
    eg_bishop_map[i] = round(eg_bishop_map[i] * 100 / 206)
for i in range(len(mg_rook_map)):
    mg_rook_map[i] = round(mg_rook_map[i] * 100 / 206)
for i in range(len(eg_rook_map)):
    eg_rook_map[i] = round(eg_rook_map[i] * 100 / 206)
for i in range(len(mg_queen_map)):
    mg_queen_map[i] = round(mg_queen_map[i] * 100 / 206)
for i in range(len(eg_queen_map)):
    eg_queen_map[i] = round(eg_queen_map[i] * 100 / 206)
for i in range(len(mg_king_map)):
    mg_king_map[i] = round(mg_king_map[i] * 100 / 206)
for i in range(len(eg_king_map)):
    eg_king_map[i] = round(eg_king_map[i] * 100 / 206)

print(mg_pawn_map)
print(eg_pawn_map)
print(mg_knight_map)
print(eg_knight_map)
print(mg_bishop_map)
print(eg_bishop_map)
print(mg_rook_map)
print(eg_rook_map)
print(mg_queen_map)
print(eg_queen_map)
print(mg_king_map)
print(eg_king_map)

[0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 5, 9, 8, 9, 3, -2, -4, -7, 5, 7, 16, 11, 2, -11, -2, -11, 3, 10, 19, 8, 2, -4, 6, 0, -6, 0, 5, -1, -6, 2, 2, -6, -3, 11, -4, -2, -7, -4, -3, 3, -1, -6, 2, -8, 5, -4, 0, 0, 0, 0, 0, 0, 0, 0]
[-85, -45, -36, -35, -35, -36, -45, -85, -37, -20, -13, -7, -7, -13, -20, -37, -30, -8, 3, 6, 6, 3, -8, -30, -17, 4, 19, 24, 24, 19, 4, -17, -17, 6, 21, 25, 25, 21, 6, -17, -4, 11, 28, 26, 26, 28, 11, -4, -33, -13, 2, 18, 18, 2, -13, -33, -98, -40, -27, -13, -13, -27, -40, -98]
[-15, -10, -7, -2, -2, -7, -10, -15, -10, -6, -4, 3, 3, -4, -6, -10, -12, -5, 0, 1, 1, 0, -5, -12, -6, -2, -2, -3, -3, -2, -2, -6, -13, -7, -2, 1, 1, -2, -7, -13, -11, -1, 3, 6, 6, 3, -1, -11, -1, 6, 8, 9, 9, 8, 6, -1, -8, -9, 0, 4, 4, 0, -9, -8]
[132, 159, 132, 96, 96, 132, 159, 132, 135, 147, 114, 87, 87, 114, 147, 135, 95, 125, 82, 58, 58, 82, 125, 95, 80, 92, 67, 48, 48, 67, 92, 80, 75, 87, 51, 34, 34, 51, 87, 75, 60, 70, 39, 15, 15, 39, 70, 60, 43, 58, 32, 16, 16, 32, 58, 43, 29, 43, 22, 0, 0, 22, 43, 29]
[-28, -15, -18, -6, -6, -18, -15, -28, -18, -6, -8, 0, 0, -8, -6, -18, -8, 0, -1, 5, 5, -1, 0, -8, -10, -3, 0, 8, 8, 0, -3, -10, -8, 0, -7, 7, 7, -7, 0, -8, -15, 3, 2, 3, 3, 2, 3, -15, -15, -10, 0, 0, 0, 0, -10, -15, -22, -20, -18, -12, -12, -18, -20, -22]
[-33, -28, -23, -13, -13, -23, -28, -33, -27, -15, -11, -2, -2, -11, -15, -27, -19, -9, -4, 1, 1, -4, -9, -19, -11, -1, 6, 12, 12, 6, -1, -11, -14, -3, 4, 10, 10, 4, -3, -14, -18, -9, -6, 0, 0, -6, -9, -18, -24, -13, -12, -4, -4, -12, -13, -24, -36, -25, -21, -17, -17, -21, -25, -36]


[0, 0, 0, 0, 0, 0, 0, 0, -5, -3, 5, 0, 7, 3, -2, -9, -5, -5, -5, 2, 2, 1, -3, -2, 3, -1, -4, -2, -6, -6, -5, -4, 5, 2, 2, -2, -2, -2, 7, 4, 14, 10, 10, 14, 15, 3, 3, 6, 0, -5, 6, 10, 12, 9, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0]
[-26, -2, -4, -11, -11, -4, -2, -26, -7, 4, 9, 2, 2, 9, 4, -7, -3, 10, -2, 8, 8, -2, 10, -3, -2, 5, 12, 19, 19, 12, 5, -2, -6, 14, 11, 15, 15, 11, 14, -6, -8, 3, 0, 5, 5, 0, 3, -8, -8, -7, 2, 0, 0, 2, -7, -8, -23, 0, -7, -11, -11, -7, 0, -23]
[1, -2, -2, 2, 2, -2, -2, 1, -1, 2, 4, 6, 6, 4, 2, -1, -1, 3, 6, 3, 3, 6, 3, -1, 2, 2, 4, 4, 4, 4, 2, 2, 0, 7, 6, 2, 2, 6, 7, 0, -2, 5, 3, 4, 4, 3, 5, -2, -2, 3, 5, 4, 4, 5, 3, -2, -1, -1, 0, -1, -1, 0, -1, -1]
[-47, -32, -24, -10, -10, -24, -32, -47, -33, -26, -9, 4, 4, -9, -26, -33, -19, -13, -4, 14, 14, -4, -13, -19, -17, -1, 6, 14, 14, 6, -1, -17, -22, -8, 4, 19, 19, 4, -8, -22, -25, -21, -8, 8, 8, -8, -21, -25, -33, -24, -25, 6, 6, -25, -24, -33, -49, -43, -27, -8, -8, -27, -43, -49]
[-4, -6, -5, -4, -4, -5, -6, -4, -6, -4, 0, -1, -1, 0, -4, -6, 3, -4, -1, -3, -3, -1, -4, 3, -3, 0, -4, 3, 3, -4, 0, -3, -2, 4, 3, -3, -3, 3, 4, -2, 3, 0, -3, 5, 5, -3, 0, 3, 2, 2, 10, -2, -2, 10, 2, 2, 9, 0, 9, 6, 6, 9, 0, 9]
[0, 22, 41, 37, 37, 41, 22, 0, 26, 49, 65, 66, 66, 65, 49, 26, 43, 63, 82, 85, 85, 82, 63, 43, 50, 76, 83, 83, 83, 83, 76, 50, 47, 81, 97, 97, 97, 97, 81, 47, 45, 83, 89, 93, 93, 89, 83, 45, 23, 59, 56, 64, 64, 56, 59, 23, 5, 29, 35, 38, 38, 35, 29, 5]

import numpy as np

a_mg = np.array([124, 781, 825, 1276, 2538])
a_eg = np.array([206, 854, 915, 1380, 2682])

print(np.round(a_mg / 206 * 100))
print(np.round(a_eg / 206 * 100))














